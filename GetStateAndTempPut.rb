#! ruby -Kurequire 'net/http'require 'uri'require 'json'=begin# Kadecotサーバに接続されたEchonetLite対応機器の状態を取得し機器のON/OFF判定して、# device4(エアコン)から計測された温度を出力します。# 2014年9月7日（日）「笑いのある生活」ハッカソン / スマートハウス・ハッカーズ・ハッカソン#5# のデモで使用したものです。# KadecotサーバのIPアドレスとデバイスNo.を適宜変更して下さい。# 以下、参考# Ref. 1, http://docs.ruby-lang.org/ja/1.8.7/library/net=2fhttp.html# Ref. 2, http://stackoverflow.com/questions/7826048/bad-uriis-not-uri# http://192.168.0.110:31413/jsonp/v1/devices/3?procedure=get&params={"propertyName":"OperationStatus"}# "->%22, {->%7B, }->%7D# http://192.168.0.110:31413/jsonp/v1/devices/3?procedure=get&params=%7B%22propertyName%22:%22OperationStatus%22%7D# Ref. 3, http://d.hatena.ne.jp/riocampos+tech/20131025/p1# URI.escape()# not need [ -> %5B, ] -> %5D# Ref. 4, http://yachibit.hateblo.jp/entry/2014/04/15/230301# JSON.parse()# Array[Hash] => Variable=endtemp = URI.escape('http://192.168.10.10:31413/jsonp/v1/devices/4?procedure=get&params={"propertyName":"OperationStatus"}')uri = URI.parse(temp)#Net::HTTP.get_print(uri)#puts "\n"http = Net::HTTP.new(uri.host, uri.port)res = http.start {  http.get(uri.request_uri)}result = JSON.parse(res.body)if result['propertyValue'] ==[48]	puts "ON"else	puts "OFF"end# setする場合# 0x30 -> 48, ON# 0x31 -> 49, OFF# temp = URI.escape('http://192.168.10.10:31413/jsonp/v1/devices/4?procedure=set&params={"propertyName":"OperationStatus","propertyValue":[0x30]}')temp = URI.escape('http://192.168.10.10:31413/jsonp/v1/devices/4?procedure=get&params={"propertyName":"MeasuredValueOfRoomTemperature"}')uri = URI.parse(temp)#Net::HTTP.get_print(uri)#puts "\n"http = Net::HTTP.new(uri.host, uri.port)res = http.start {  http.get(uri.request_uri)}result = JSON.parse(res.body)print "Temp.: "print  result["propertyValue"]puts " degree"